{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/louieg3/Documents/Web_development/portfolio_site/frontend/src/Hover.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { animated, useSpring } from 'react-spring';\n\nconst Hover = ({\n  scale,\n  timing = 150,\n  children\n}) => {\n  _s();\n\n  const [isHovered, setIsHovered] = useState(false); //BOUNCE ANIMATION CONFIGURATIONS\n\n  const style = useSpring({\n    display: 'inline-block',\n    transform: isHovered ? `scale(${scale})` : `scale(1)`,\n    config: {\n      tension: 300,\n      friction: 10\n    }\n  }); //SET THE TIMER TO STOP THE ANIMATION AFTER A SET AMOUNT OF TIME\n\n  useEffect(() => {\n    if (!isHovered) {\n      return;\n    }\n\n    ;\n    const timeoutId = window.setTimeout(() => {\n      setIsHovered(false);\n    }, timing);\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isHovered, timing]); //TRIGGER THE ANIMATION AND THE AUDIO ON MOUSE-ENTER\n\n  const trigger = () => {\n    setIsHovered(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(animated.span, {\n    className: \"Hover-Box\",\n    onMouseEnter: trigger,\n    style: style,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Hover, \"ztqp/6pKaNmq3sym2r6lQY8MKro=\", false, function () {\n  return [useSpring];\n});\n\n_c = Hover;\nexport default Hover;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hover\");","map":{"version":3,"sources":["/Users/louieg3/Documents/Web_development/portfolio_site/frontend/src/Hover.js"],"names":["React","useEffect","useState","animated","useSpring","Hover","scale","timing","children","isHovered","setIsHovered","style","display","transform","config","tension","friction","timeoutId","window","setTimeout","clearTimeout","trigger"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,cAAlC;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,MAAM,GAAG,GAAjB;AAAsBC,EAAAA;AAAtB,CAAD,KAAqC;AAAA;;AACjD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C,CADiD,CAGjD;;AACA,QAAMS,KAAK,GAAGP,SAAS,CAAC;AACtBQ,IAAAA,OAAO,EAAE,cADa;AAEtBC,IAAAA,SAAS,EAAEJ,SAAS,GACf,SAAQH,KAAM,GADC,GAEf,UAJiB;AAKtBQ,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE,GADH;AAENC,MAAAA,QAAQ,EAAE;AAFJ;AALc,GAAD,CAAvB,CAJiD,CAejD;;AACAf,EAAAA,SAAS,CAAC,MAAM;AAEd,QAAI,CAACQ,SAAL,EAAgB;AACd;AACD;;AAAA;AAED,UAAMQ,SAAS,GAAGC,MAAM,CAACC,UAAP,CAAkB,MAAM;AACxCT,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAFiB,EAEfH,MAFe,CAAlB;AAIA,WAAO,MAAM;AACXW,MAAAA,MAAM,CAACE,YAAP,CAAoBH,SAApB;AACD,KAFD;AAGD,GAbQ,EAaN,CAACR,SAAD,EAAYF,MAAZ,CAbM,CAAT,CAhBiD,CA+BjD;;AACA,QAAMc,OAAO,GAAG,MAAM;AACpBX,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAIA,sBACE,QAAC,QAAD,CAAU,IAAV;AAAe,IAAA,SAAS,EAAC,WAAzB;AAAqC,IAAA,YAAY,EAAEW,OAAnD;AAA4D,IAAA,KAAK,EAAEV,KAAnE;AAAA,cACGH;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAzCD;;GAAMH,K;UAIUD,S;;;KAJVC,K;AA2CN,eAAeA,KAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {animated, useSpring} from 'react-spring';\n\nconst Hover = ({scale, timing = 150, children}) => {\n  const [isHovered, setIsHovered] = useState(false);\n\n  //BOUNCE ANIMATION CONFIGURATIONS\n  const style = useSpring({\n    display: 'inline-block',\n    transform: isHovered\n      ? `scale(${scale})`\n      : `scale(1)`,\n    config: {\n      tension: 300,\n      friction: 10,\n    },\n  });\n\n  //SET THE TIMER TO STOP THE ANIMATION AFTER A SET AMOUNT OF TIME\n  useEffect(() => {\n\n    if (!isHovered) {\n      return;\n    };\n\n    const timeoutId = window.setTimeout(() => {\n      setIsHovered(false);\n    }, timing);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isHovered, timing]);\n\n  //TRIGGER THE ANIMATION AND THE AUDIO ON MOUSE-ENTER\n  const trigger = () => {\n    setIsHovered(true);\n  };\n\n  return (\n    <animated.span className=\"Hover-Box\" onMouseEnter={trigger} style={style}>\n      {children}\n    </animated.span>\n  );\n};\n\nexport default Hover;"]},"metadata":{},"sourceType":"module"}