{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/louieg3/Documents/Web_development/portfolio_site/frontend/src/Portfolio.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Spring } from 'react-spring/renderprops';\nimport './App.css';\nimport ProjectsList from \"./ProjectsList\";\nimport useViewport from \"./hooks/useViewport\";\nimport LogoGithub from 'react-ionicons/lib/LogoGithub';\nimport MdLaptop from 'react-ionicons/lib/MdLaptop';\nimport ACOUSTIC_GIF from \"./images/ACOUSTIC.mp4\";\nimport LYRCS_GIF from \"./images/LYRCS.mp4\";\nimport WINENOT_GIF from \"./images/WINENOT.mp4\";\n\nfunction Portfolio() {\n  _s();\n\n  const [projectHover, setProjectHover] = useState(false);\n  const [resultsIdx, setResultsIdx] = useState(0);\n  const {\n    viewportWidth,\n    viewportHeight\n  } = useViewport();\n  const aspectRatio = viewportWidth / viewportHeight;\n  console.log(aspectRatio);\n  let gifWidth;\n  let gifHeight; //KEEPING THE BACKGROUND GIF COVERING THE BACKGROUND AT ALL TIMES\n\n  if (aspectRatio <= 2.11659) {\n    gifHeight = '100vh';\n    gifWidth = 'auto';\n  } else {\n    gifHeight = 'auto';\n    gifWidth = '100vw';\n  }\n\n  const portfolioItems = [{\n    id: 1,\n    title: \"Acoustic.io\",\n    gif: ACOUSTIC_GIF,\n    link: \"https://acoustic-io.herokuapp.com/\",\n    githubLink: \"https://github.com/LouisGaravaglia/test-acoustic-frontend\",\n    summary: \"***CURRENTLY IN DEVELOPMENT*** Acoustic.io is a web app that will use AI to create playlists for you of new music it thinks you may like. Tech Stack: Typescript | React | Python | Django | TensorFlow | PostgreSQL\",\n    classname: \"LYRCS-Opacity\"\n  }, {\n    id: 2,\n    title: \"LYRCS\",\n    gif: LYRCS_GIF,\n    link: \"http://lyrcs.herokuapp.com/\",\n    githubLink: \"https://github.com/LouisGaravaglia/iTranslate\",\n    summary: \"LYRCS is a web app that displays lyrics for a song in its original language as well as a translated language of the user's choice. Tech Stack: Javascript | React | Redux | Node | Express | PostgreSQL\",\n    classname: \"LYRCS-Opacity\"\n  }, {\n    id: 3,\n    title: \"Wine-not!\",\n    gif: WINENOT_GIF,\n    link: \"https://wine-not-app.herokuapp.com/\",\n    githubLink: \"https://github.com/LouisGaravaglia/Wine-not\",\n    summary: \"Would you like something new to drink? Wine-Not! A web app that allows users to find new Wines to enjoy. Tech Stack: Javascript | Python | Flask | PostgreSQL | Bulma\",\n    classname: \"Wine-Not-Opacity\"\n  }];\n  let mainBackground;\n\n  if (projectHover) {\n    mainBackground = \"none\";\n  } else {\n    mainBackground = \"linear-gradient(to right, #63a198 0%, #8874c2 100%)\";\n  }\n\n  let gifBackground;\n  if (projectHover) gifBackground = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Work-Gif-Box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      style: {\n        position: \"absolute\",\n        width: '100vw',\n        height: gifHeight,\n        zIndex: -12\n      },\n      loop: \"true\",\n      autoplay: \"autoplay\",\n      muted: true,\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: portfolioItems[resultsIdx].gif,\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true); ////////////////////////////////////////////////////  RETURN  ////////////////////////////////////////////////////\n\n  return /*#__PURE__*/_jsxDEV(Spring, {\n    from: {\n      opacity: 0\n    },\n    to: {\n      opacity: 1\n    },\n    config: {\n      delay: 300,\n      duration: 300\n    },\n    children: props => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: props,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Main-Container\",\n        style: {\n          background: mainBackground\n        },\n        children: [/*#__PURE__*/_jsxDEV(ProjectsList, {\n          portfolioItems: portfolioItems,\n          projectHover: projectHover,\n          setProjectHover: setProjectHover,\n          resultsIdx: resultsIdx,\n          setResultsIdx: setResultsIdx\n        }, portfolioItems[0].id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), gifBackground]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Portfolio, \"AZ8yPT4l70FChLcOqyiMzdR5nMc=\", false, function () {\n  return [useViewport];\n});\n\n_c = Portfolio;\n;\nexport default Portfolio;\n\nvar _c;\n\n$RefreshReg$(_c, \"Portfolio\");","map":{"version":3,"sources":["/Users/louieg3/Documents/Web_development/portfolio_site/frontend/src/Portfolio.js"],"names":["React","useState","Spring","ProjectsList","useViewport","LogoGithub","MdLaptop","ACOUSTIC_GIF","LYRCS_GIF","WINENOT_GIF","Portfolio","projectHover","setProjectHover","resultsIdx","setResultsIdx","viewportWidth","viewportHeight","aspectRatio","console","log","gifWidth","gifHeight","portfolioItems","id","title","gif","link","githubLink","summary","classname","mainBackground","gifBackground","position","width","height","zIndex","opacity","delay","duration","props","background"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {Spring} from 'react-spring/renderprops';\nimport './App.css';\nimport ProjectsList from \"./ProjectsList\";\nimport useViewport from \"./hooks/useViewport\"\nimport LogoGithub from 'react-ionicons/lib/LogoGithub';\nimport MdLaptop from 'react-ionicons/lib/MdLaptop';\nimport ACOUSTIC_GIF from \"./images/ACOUSTIC.mp4\";\nimport LYRCS_GIF from \"./images/LYRCS.mp4\";\nimport WINENOT_GIF from \"./images/WINENOT.mp4\";\n\nfunction Portfolio() {\n  const [projectHover, setProjectHover] = useState(false);\n  const [resultsIdx, setResultsIdx] = useState(0);\n  const {viewportWidth, viewportHeight} = useViewport();\n  const aspectRatio = viewportWidth / viewportHeight;\n  console.log(aspectRatio);\n  let gifWidth;\n  let gifHeight;\n    //KEEPING THE BACKGROUND GIF COVERING THE BACKGROUND AT ALL TIMES\n    if (aspectRatio <= 2.11659) {\n      gifHeight = '100vh';\n      gifWidth = 'auto'\n    } else {\n      gifHeight = 'auto';\n      gifWidth = '100vw';\n    }\n  \n\n  const portfolioItems = [\n    {\n      id: 1,\n      title: \"Acoustic.io\",\n      gif: ACOUSTIC_GIF,\n      link: \"https://acoustic-io.herokuapp.com/\",\n      githubLink: \"https://github.com/LouisGaravaglia/test-acoustic-frontend\",\n      summary: \"***CURRENTLY IN DEVELOPMENT*** Acoustic.io is a web app that will use AI to create playlists for you of new music it thinks you may like. Tech Stack: Typescript | React | Python | Django | TensorFlow | PostgreSQL\",\n      classname: \"LYRCS-Opacity\"\n    },\n    {\n      id: 2,\n      title: \"LYRCS\",\n      gif: LYRCS_GIF,\n      link: \"http://lyrcs.herokuapp.com/\",\n      githubLink: \"https://github.com/LouisGaravaglia/iTranslate\",\n      summary: \"LYRCS is a web app that displays lyrics for a song in its original language as well as a translated language of the user's choice. Tech Stack: Javascript | React | Redux | Node | Express | PostgreSQL\",\n      classname: \"LYRCS-Opacity\"\n    },\n    {\n      id: 3,\n      title: \"Wine-not!\",\n      gif: WINENOT_GIF,\n      link: \"https://wine-not-app.herokuapp.com/\",\n      githubLink: \"https://github.com/LouisGaravaglia/Wine-not\",\n      summary: \"Would you like something new to drink? Wine-Not! A web app that allows users to find new Wines to enjoy. Tech Stack: Javascript | Python | Flask | PostgreSQL | Bulma\",\n      classname: \"Wine-Not-Opacity\"\n    }\n  ];\n\n  let mainBackground;\n\n  if (projectHover) {\n    mainBackground = \"none\"\n  } else {\n    mainBackground = \"linear-gradient(to right, #63a198 0%, #8874c2 100%)\";\n  }\n\n  let gifBackground;\n\n  if (projectHover) gifBackground = (\n    <>\n    <div className=\"Work-Gif-Box\"></div>\n    <video style={{position: \"absolute\", width: '100vw', height: gifHeight, zIndex: -12}} loop=\"true\" autoplay=\"autoplay\" muted>\n      <source src={portfolioItems[resultsIdx].gif} type=\"video/mp4\" />\n    </video>\n    </>\n  )\n\n////////////////////////////////////////////////////  RETURN  ////////////////////////////////////////////////////\n\n  return (\n    <Spring\n      from={{opacity: 0}}\n      to={{opacity: 1}}\n      config={{delay: 300, duration: 300}}\n    >\n      {props => (\n        <div style={props}>\n\n          <div className=\"Main-Container\" style={{background: mainBackground}}>\n            <ProjectsList key={portfolioItems[0].id} portfolioItems={portfolioItems} projectHover={projectHover} setProjectHover={setProjectHover} resultsIdx={resultsIdx} setResultsIdx={setResultsIdx}/>\n            {gifBackground}\n          </div>\n \n\n        </div>\n      )}\n    </Spring>\n  );\n};\n\nexport default Portfolio;"]},"metadata":{},"sourceType":"module"}